export interface TagOptions {
  readonly value: string;
  readonly label: string;
  readonly color: string;
}

export const tagOptions: readonly TagOptions[] = [
 { value: 'Array', label: ' Array', color: '#666666' },
 { value: 'Hash Table', label: 'Hash Table', color: '#666666' },
 { value: 'Linked List', label: 'Linked List', color: '#666666' },
 { value: 'Math', label: 'Math', color: '#666666' },
 { value: 'Two Pointers', label: 'Two Pointers', color: '#666666' },
 { value: 'String', label: 'String', color: '#666666' },
 { value: 'Binary Search', label: 'Binary Search', color: '#666666' },
 { value: 'Divide and Conquer', label: 'Divide and Conquer', color: '#666666' },
 { value: 'Dynamic Programming', label: 'Dynamic Programming', color: '#666666' },
 { value: 'Backtracking', label: 'Backtracking', color: '#666666' },
 { value: 'Stack', label: 'Stack', color: '#666666' },
 { value: 'Heap', label: 'Heap', color: '#666666' },
 { value: 'Greedy', label: 'Greedy', color: '#666666' },
 { value: 'Sort', label: 'Sort', color: '#666666' },
 { value: 'Bit Manipulation', label: 'Bit Manipulation', color: '#666666' },
 { value: 'Tree', label: 'Tree', color: '#666666' },
 { value: 'Depth-first Search', label: 'Depth-first Search', color: '#666666' },
 { value: 'Breadth-first Search', label: 'Breadth-first Search', color: '#666666' },
 { value: 'Union Find', label: 'Union Find', color: '#666666' },
 { value: 'Graph', label: 'Graph', color: '#666666' },
 { value: 'Design', label: 'Design', color: '#666666' },
 { value: 'Topological Sort', label: 'Topological Sort', color: '#666666' },
 { value: 'Trie', label: 'Trie', color: '#666666' },
 { value: 'Binary Indexed Tree', label: 'Binary Indexed Tree', color: '#666666' },
 { value: 'Segment Tree', label: 'Segment Tree', color: '#666666' },
 { value: 'Binary Search Tree', label: 'Binary Search Tree', color: '#666666' },
 { value: 'Recursion', label: 'Recursion', color: '#666666' },
 { value: 'Brainteaser', label: 'Brainteaser', color: '#666666' },
 { value: 'Memoization', label: 'Memoization', color: '#666666' },
 { value: 'Queue', label: 'Queue', color: '#666666' },
 { value: 'Minimax', label: 'Minimax', color: '#666666' },
 { value: 'Reservoir Sampling', label: 'Reservoir Sampling', color: '#666666' },
 { value: 'Ordered Map', label: 'Ordered Map', color: '#666666' },
 { value: 'Geometry', label: 'Geometry', color: '#666666' },
 { value: 'Random', label: 'Random', color: '#666666' },
 { value: 'Rejection Sampling', label: 'Rejection Sampling', color: '#666666' },
 { value: 'Sliding Window', label: 'Sliding Window', color: '#666666' },
 { value: 'Line Sweep', label: 'Line Sweep', color: '#666666' },
 { value: 'Rolling Hash', label: 'Rolling Hash', color: '#666666' },
 { value: 'Suffix Array ', label: 'Suffix Array ', color: '#666666' },
];
